<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
  <title>myfirstmap</title>
  <link rel="stylesheet" href="/stylesheets/style.css">
  <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=vf2sd1hd65"></script>
</head>
<body>
<div id="navbar">myfirstmap</div>
<div id="infoBox">
  <div id="infoTitle">현재날짜</div>
  <div id="infoContent">2020.11.08</div>
</div>
<div id="current">현재 위치</div>
<div id="map" style="width:100%;height:100vh;padding-top:50px"></div>

<script src="/data/data.js"></script>
<script>
  var mapOptions = {
    center: new naver.maps.LatLng(37.401092, 127.106288), // 위도 경도
    zoom: 15
  };

  var map = new naver.maps.Map('map', mapOptions);

  var markerList = [];
  var infoWindowList = [];

  for (var i in data) {
    var target = data[i];
    var latlng = new naver.maps.LatLng(target.lat, target.lng);
    var marker = new naver.maps.Marker({
      map: map,
      position: latlng,
      icon: {
        content: "<div class='marker'></div>",
        anchor: new naver.maps.Point(12, 12)
      }
    })

    var content = `<div class="infowindow_wrap">
        <div class="infowindow_title">${target.title}</div>
        <div class="infowindow_content">${target.content}</div>
        <div class="infowindow_date">${target.date}</div>
    </div>`;

    var infowindow = new naver.maps.InfoWindow({
      content: content,
      backgroundColor: "#00ff0000", // 투명색 - 이렇게 하는 이유는 해당 info window 의 스타일은 css 파일에서 커스텀할 것이기 때문에 초기화해주는 의미이다.
      borderColor: "#00ff0000",
      anchorSize: new naver.maps.Size(0, 0), // 앵커사이즈는 info window가 뜰 경우 말풍선 꼬리를 뜻하는 것인데 그걸 이번 예제에선 설정하지 않을 것이기 때문에 0,0으로.
    })

    markerList.push(marker);
    infoWindowList.push(infowindow);
  }

  for (var j = 0; j < markerList.length; j++) {
    // 네이버 지도에 이벤트를 설정해주는 방법이다.
    // markerList를 클릭했을 때 getClickHandler 라는 콜백 함수를 실행시키겠다 라는 의미이다.
    naver.maps.Event.addListener(markerList[j], "click", getClickHandler(j));
    // 아래 click 이벤트등록은 수정할 필요가 있어 보이긴 한데.. 음 생각해보자. 일단 공부 ㄱㄱ
    naver.maps.Event.addListener(map, "click", clickMap(j));
  }

  function clickMap (index) {
    return function () {
      var infowindow = infoWindowList[index];
      infowindow.close();
    }
  }

  function getClickHandler (index) {
    return function () {
      var marker = markerList[index];
      var infowindow = infoWindowList[index];
      if (infowindow.getMap()) { // infowindow가 현재 지도의 띄워져있는지 아닌지를 true / false로 반환
        infowindow.close();
      } else {
        infowindow.open(map, marker); // map의 marker 위에다가 infowindow를 열리게해라.
      }
    }
  }
</script>
</body>
</html>